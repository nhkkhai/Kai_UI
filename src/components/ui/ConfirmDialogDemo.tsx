import React, { useState } from "react";
import ConfirmDialog from "./ConfirmDialog";
import Button from "./Button";
import {
  FaTrash,
  FaExclamationTriangle,
  FaInfoCircle,
  FaCheckCircle,
} from "react-icons/fa";

const ConfirmDialogDemo: React.FC = () => {
  const [openDialogs, setOpenDialogs] = useState<Record<string, boolean>>({});

  const openDialog = (dialogName: string) => {
    setOpenDialogs((prev) => ({ ...prev, [dialogName]: true }));
  };

  const closeDialog = (dialogName: string) => {
    setOpenDialogs((prev) => ({ ...prev, [dialogName]: false }));
  };

  const isDialogOpen = (dialogName: string) => openDialogs[dialogName] || false;

  const handleConfirm = (dialogName: string) => {
    console.log(`Confirmed: ${dialogName}`);
    closeDialog(dialogName);
  };

  const handleCancel = (dialogName: string) => {
    console.log(`Cancelled: ${dialogName}`);
    closeDialog(dialogName);
  };

  return (
    <div className="p-8 space-y-8 bg-gray-50 min-h-screen">
      <div className="text-center">
        <h1 className="text-4xl font-bold text-gray-800 mb-4">
          ConfirmDialog Component Showcase
        </h1>
        <p className="text-gray-600 text-lg">
          Kh√°m ph√° t·∫•t c·∫£ c√°c t√≠nh nƒÉng c·ªßa ConfirmDialog component
        </p>
      </div>

      {/* Basic Confirm Dialogs */}
      <div className="space-y-6">
        <h2 className="text-2xl font-semibold text-gray-800 border-b pb-2">
          üîî Basic Confirm Dialogs
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          <Button
            variant="danger"
            onClick={() => openDialog("delete")}
            className="w-full"
            leftIcon={<FaTrash />}
          >
            Delete Item
          </Button>

          <Button
            variant="warning"
            onClick={() => openDialog("warning")}
            className="w-full"
            leftIcon={<FaExclamationTriangle />}
          >
            Warning Action
          </Button>

          <Button
            variant="primary"
            onClick={() => openDialog("info")}
            className="w-full"
            leftIcon={<FaInfoCircle />}
          >
            Information
          </Button>

          <Button
            variant="success"
            onClick={() => openDialog("success")}
            className="w-full"
            leftIcon={<FaCheckCircle />}
          >
            Success Action
          </Button>
        </div>

        {/* Delete Confirmation */}
        <ConfirmDialog
          open={isDialogOpen("delete")}
          title="X√°c nh·∫≠n x√≥a"
          message="B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a item n√†y kh√¥ng? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c."
          onConfirm={() => handleConfirm("delete")}
          onCancel={() => handleCancel("delete")}
          confirmText="X√≥a"
          cancelText="H·ªßy"
          icon={<FaTrash />}
          variant="dark"
        />

        {/* Warning Confirmation */}
        <ConfirmDialog
          open={isDialogOpen("warning")}
          title="C·∫£nh b√°o"
          message="B·∫°n s·∫Øp th·ª±c hi·ªán m·ªôt h√†nh ƒë·ªông quan tr·ªçng. H√£y ƒë·∫£m b·∫£o r·∫±ng b·∫°n hi·ªÉu r√µ h·∫≠u qu·∫£."
          onConfirm={() => handleConfirm("warning")}
          onCancel={() => handleCancel("warning")}
          confirmText="Ti·∫øp t·ª•c"
          cancelText="D·ª´ng l·∫°i"
          icon={<FaExclamationTriangle />}
          variant="blackGlass"
        />

        {/* Info Confirmation */}
        <ConfirmDialog
          open={isDialogOpen("info")}
          title="Th√¥ng tin"
          message="ƒê√¢y l√† m·ªôt th√¥ng b√°o quan tr·ªçng m√† b·∫°n c·∫ßn x√°c nh·∫≠n tr∆∞·ªõc khi ti·∫øp t·ª•c."
          onConfirm={() => handleConfirm("info")}
          onCancel={() => handleCancel("info")}
          confirmText="ƒê√£ hi·ªÉu"
          cancelText="ƒê√≥ng"
          icon={<FaInfoCircle />}
          variant="light"
        />

        {/* Success Confirmation */}
        <ConfirmDialog
          open={isDialogOpen("success")}
          title="Th√†nh c√¥ng"
          message="H√†nh ƒë·ªông c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c th·ª±c hi·ªán th√†nh c√¥ng. B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c kh√¥ng?"
          onConfirm={() => handleConfirm("success")}
          onCancel={() => handleCancel("success")}
          confirmText="Ti·∫øp t·ª•c"
          cancelText="D·ª´ng l·∫°i"
          icon={<FaCheckCircle />}
          variant="glass"
        />
      </div>

      {/* Different Styles */}
      <div className="space-y-6">
        <h2 className="text-2xl font-semibold text-gray-800 border-b pb-2">
          üé® Different Styles
        </h2>

        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          {["dark", "light", "blackGlass", "glass"].map((style) => (
            <Button
              key={style}
              variant={
                style === "dark"
                  ? "black"
                  : style === "light"
                  ? "gray"
                  : "primary"
              }
              onClick={() => openDialog(`style-${style}`)}
              className="w-full"
            >
              {style}
            </Button>
          ))}
        </div>

        {/* Style Dialogs */}
        {["dark", "light", "blackGlass", "glass"].map((style) => (
          <ConfirmDialog
            key={style}
            open={isDialogOpen(`style-${style}`)}
            title={`${style} Style`}
            message={`ƒê√¢y l√† confirm dialog s·ª≠ d·ª•ng style ${style}. B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c kh√¥ng?`}
            onConfirm={() => handleConfirm(`style-${style}`)}
            onCancel={() => handleCancel(`style-${style}`)}
            confirmText="Ti·∫øp t·ª•c"
            cancelText="H·ªßy"
            icon={<FaCheckCircle />}
            variant={style as any}
          />
        ))}
      </div>

      {/* Different Sizes */}
      <div className="space-y-6">
        <h2 className="text-2xl font-semibold text-gray-800 border-b pb-2">
          üìè Different Sizes
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          {["small", "medium", "large"].map((size) => (
            <Button
              key={size}
              variant="primary"
              onClick={() => openDialog(`size-${size}`)}
              className="w-full"
            >
              {size}
            </Button>
          ))}
        </div>

        {/* Size Dialogs */}
        {["small", "medium", "large"].map((size) => (
          <ConfirmDialog
            key={size}
            open={isDialogOpen(`size-${size}`)}
            title={`${size} Size`}
            message={`ƒê√¢y l√† confirm dialog v·ªõi size ${size}. K√≠ch th∆∞·ªõc n√†y ph√π h·ª£p cho ${
              size === "small"
                ? "th√¥ng b√°o ng·∫Øn"
                : size === "medium"
                ? "th√¥ng b√°o v·ª´a"
                : "th√¥ng b√°o d√†i"
            }.`}
            onConfirm={() => handleConfirm(`size-${size}`)}
            onCancel={() => handleCancel(`size-${size}`)}
            confirmText="OK"
            cancelText="Cancel"
            icon={<FaInfoCircle />}
            variant="light"
            size={size as any}
          />
        ))}
      </div>

      {/* Different Animations */}
      <div className="space-y-6">
        <h2 className="text-2xl font-semibold text-gray-800 border-b pb-2">
          ‚ú® Different Animations
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-5 gap-4">
          {["fade", "slide", "scale", "bounce", "flip"].map((animation) => (
            <Button
              key={animation}
              variant="purple"
              onClick={() => openDialog(`animation-${animation}`)}
              className="w-full"
            >
              {animation}
            </Button>
          ))}
        </div>

        {/* Animation Dialogs */}
        {["fade", "slide", "scale", "bounce", "flip"].map((animation) => (
          <ConfirmDialog
            key={animation}
            open={isDialogOpen(`animation-${animation}`)}
            title={`${animation} Animation`}
            message={`ƒê√¢y l√† confirm dialog s·ª≠ d·ª•ng animation ${animation}. B·∫°n c√≥ th·∫•y hi·ªáu ·ª©ng ƒë·∫πp kh√¥ng?`}
            onConfirm={() => handleConfirm(`animation-${animation}`)}
            onCancel={() => handleCancel(`animation-${animation}`)}
            confirmText="ƒê·∫πp l·∫Øm!"
            cancelText="B√¨nh th∆∞·ªùng"
            icon={<FaCheckCircle />}
            variant="blackGlass"
            animation={animation as any}
          />
        ))}
      </div>

      {/* Advanced Features */}
      <div className="space-y-6">
        <h2 className="text-2xl font-semibold text-gray-800 border-b pb-2">
          üé≠ Advanced Features
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="space-y-4">
            <h3 className="font-semibold text-lg">Backdrop Options</h3>
            <div className="space-y-2">
              <Button
                variant="primary"
                onClick={() => openDialog("noBackdropClick")}
                className="w-full"
              >
                No Backdrop Click
              </Button>
              <Button
                variant="primary"
                onClick={() => openDialog("noEscape")}
                className="w-full"
              >
                No Escape Key
              </Button>
            </div>
          </div>

          <div className="space-y-4">
            <h3 className="font-semibold text-lg">Custom Content</h3>
            <div className="space-y-2">
              <Button
                variant="success"
                onClick={() => openDialog("customContent")}
                className="w-full"
              >
                Custom Content
              </Button>
              <Button
                variant="warning"
                onClick={() => openDialog("longMessage")}
                className="w-full"
              >
                Long Message
              </Button>
            </div>
          </div>
        </div>

        {/* No Backdrop Click Dialog */}
        <ConfirmDialog
          open={isDialogOpen("noBackdropClick")}
          title="Kh√¥ng th·ªÉ ƒë√≥ng b·∫±ng backdrop"
          message="Dialog n√†y kh√¥ng th·ªÉ ƒë√≥ng b·∫±ng c√°ch click v√†o backdrop. B·∫°n ph·∫£i s·ª≠ d·ª•ng n√∫t ƒë·ªÉ ƒë√≥ng."
          onConfirm={() => handleConfirm("noBackdropClick")}
          onCancel={() => handleCancel("noBackdropClick")}
          confirmText="ƒê√£ hi·ªÉu"
          cancelText="ƒê√≥ng"
          icon={<FaExclamationTriangle />}
          variant="light"
          closeOnBackdrop={false}
        />

        {/* No Escape Key Dialog */}
        <ConfirmDialog
          open={isDialogOpen("noEscape")}
          title="Kh√¥ng th·ªÉ ƒë√≥ng b·∫±ng Escape"
          message="Dialog n√†y kh√¥ng th·ªÉ ƒë√≥ng b·∫±ng ph√≠m Escape. B·∫°n ph·∫£i s·ª≠ d·ª•ng n√∫t ƒë·ªÉ ƒë√≥ng."
          onConfirm={() => handleConfirm("noEscape")}
          onCancel={() => handleCancel("noEscape")}
          confirmText="ƒê√£ hi·ªÉu"
          cancelText="ƒê√≥ng"
          icon={<FaExclamationTriangle />}
          variant="dark"
          closeOnEscape={false}
        />

        {/* Custom Content Dialog */}
        <ConfirmDialog
          open={isDialogOpen("customContent")}
          title="N·ªôi dung t√πy ch·ªânh"
          message="B·∫°n c√≥ mu·ªën t√πy ch·ªânh n·ªôi dung c·ªßa dialog n√†y kh√¥ng? Ch√∫ng ta c√≥ th·ªÉ th√™m nhi·ªÅu t√≠nh nƒÉng th√∫ v·ªã."
          onConfirm={() => handleConfirm("customContent")}
          onCancel={() => handleCancel("customContent")}
          confirmText="C√≥, t√¥i mu·ªën!"
          cancelText="Kh√¥ng, c·∫£m ∆°n"
          icon={<FaCheckCircle />}
          variant="glass"
          size="large"
        />

        {/* Long Message Dialog */}
        <ConfirmDialog
          open={isDialogOpen("longMessage")}
          title="Th√¥ng b√°o d√†i"
          message="ƒê√¢y l√† m·ªôt th√¥ng b√°o r·∫•t d√†i ƒë·ªÉ ki·ªÉm tra xem dialog c√≥ x·ª≠ l√Ω t·ªët n·ªôi dung d√†i kh√¥ng. Th√¥ng b√°o n√†y c√≥ th·ªÉ ch·ª©a nhi·ªÅu d√≤ng vƒÉn b·∫£n v√† c√°c th√¥ng tin chi ti·∫øt quan tr·ªçng m√† ng∆∞·ªùi d√πng c·∫ßn ƒë·ªçc tr∆∞·ªõc khi ƒë∆∞a ra quy·∫øt ƒë·ªãnh. Ch√∫ng ta c≈©ng c√≥ th·ªÉ th√™m c√°c th√¥ng tin b·ªï sung nh∆∞ ƒëi·ªÅu kho·∫£n, ƒëi·ªÅu ki·ªán ho·∫∑c c√°c l∆∞u √Ω quan tr·ªçng kh√°c."
          onConfirm={() => handleConfirm("longMessage")}
          onCancel={() => handleCancel("longMessage")}
          confirmText="T√¥i ƒë√£ ƒë·ªçc v√† ƒë·ªìng √Ω"
          cancelText="T√¥i c·∫ßn th√™m th·ªùi gian"
          icon={<FaInfoCircle />}
          variant="blackGlass"
          size="large"
        />
      </div>

      {/* Real-world Examples */}
      <div className="space-y-6">
        <h2 className="text-2xl font-semibold text-gray-800 border-b pb-2">
          üåç Real-world Examples
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="space-y-4">
            <h3 className="font-semibold text-lg">E-commerce</h3>
            <div className="space-y-2">
              <Button
                variant="danger"
                onClick={() => openDialog("removeFromCart")}
                className="w-full"
              >
                Remove from Cart
              </Button>
              <Button
                variant="warning"
                onClick={() => openDialog("clearCart")}
                className="w-full"
              >
                Clear Cart
              </Button>
            </div>
          </div>

          <div className="space-y-4">
            <h3 className="font-semibold text-lg">User Management</h3>
            <div className="space-y-2">
              <Button
                variant="danger"
                onClick={() => openDialog("deleteAccount")}
                className="w-full"
              >
                Delete Account
              </Button>
              <Button
                variant="warning"
                onClick={() => openDialog("logout")}
                className="w-full"
              >
                Logout
              </Button>
            </div>
          </div>
        </div>

        {/* Remove from Cart */}
        <ConfirmDialog
          open={isDialogOpen("removeFromCart")}
          title="X√≥a kh·ªèi gi·ªè h√†ng"
          message="B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng kh√¥ng?"
          onConfirm={() => handleConfirm("removeFromCart")}
          onCancel={() => handleCancel("removeFromCart")}
          confirmText="X√≥a"
          cancelText="Gi·ªØ l·∫°i"
          icon={<FaTrash />}
          variant="dark"
        />

        {/* Clear Cart */}
        <ConfirmDialog
          open={isDialogOpen("clearCart")}
          title="L√†m tr·ªëng gi·ªè h√†ng"
          message="B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t·∫•t c·∫£ s·∫£n ph·∫©m trong gi·ªè h√†ng? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c."
          onConfirm={() => handleConfirm("clearCart")}
          onCancel={() => handleCancel("clearCart")}
          confirmText="L√†m tr·ªëng"
          cancelText="H·ªßy"
          icon={<FaExclamationTriangle />}
          variant="blackGlass"
        />

        {/* Delete Account */}
        <ConfirmDialog
          open={isDialogOpen("deleteAccount")}
          title="X√≥a t√†i kho·∫£n"
          message="B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n c·ªßa m√¨nh? T·∫•t c·∫£ d·ªØ li·ªáu s·∫Ω b·ªã m·∫•t vƒ©nh vi·ªÖn v√† kh√¥ng th·ªÉ kh√¥i ph·ª•c."
          onConfirm={() => handleConfirm("deleteAccount")}
          onCancel={() => handleCancel("deleteAccount")}
          confirmText="X√≥a t√†i kho·∫£n"
          cancelText="H·ªßy"
          icon={<FaExclamationTriangle />}
          variant="dark"
          size="large"
        />

        {/* Logout */}
        <ConfirmDialog
          open={isDialogOpen("logout")}
          title="ƒêƒÉng xu·∫•t"
          message="B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh·ªèi t√†i kho·∫£n? B·∫°n s·∫Ω c·∫ßn ƒëƒÉng nh·∫≠p l·∫°i ƒë·ªÉ ti·∫øp t·ª•c s·ª≠ d·ª•ng."
          onConfirm={() => handleConfirm("logout")}
          onCancel={() => handleCancel("logout")}
          confirmText="ƒêƒÉng xu·∫•t"
          cancelText="·ªû l·∫°i"
          icon={<FaInfoCircle />}
          variant="light"
        />
      </div>
    </div>
  );
};

export default ConfirmDialogDemo;

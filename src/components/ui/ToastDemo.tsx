"use client";

import React, { useState } from "react";
import { useToast } from "./ToastProvider";

const ToastDemo: React.FC = () => {
  const { showToast, closeAllToasts } = useToast();
  const [position, setPosition] = useState<"top-right" | "top-center" | "top-left" | "bottom-right" | "bottom-center" | "bottom-left">("top-right");

  const showBasicToast = () => {
    showToast({
      title: "Th√¥ng b√°o c∆° b·∫£n",
      message: "ƒê√¢y l√† m·ªôt toast th√¥ng b√°o ƒë∆°n gi·∫£n.",
      variant: "default",
    });
  };

  const showSuccessToast = () => {
    showToast({
      title: "Th√†nh c√¥ng!",
      message: "D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng.",
      variant: "success",
    });
  };

  const showWarningToast = () => {
    showToast({
      title: "C·∫£nh b√°o",
      message: "Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin tr∆∞·ªõc khi ti·∫øp t·ª•c.",
      variant: "warning",
    });
  };

  const showErrorToast = () => {
    showToast({
      title: "L·ªói!",
      message: "Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.",
      variant: "error",
    });
  };

  const showInfoToast = () => {
    showToast({
      title: "Th√¥ng tin",
      message: "C√≥ c·∫≠p nh·∫≠t m·ªõi cho ·ª©ng d·ª•ng c·ªßa b·∫°n.",
      variant: "info",
    });
  };

  const showCustomIconToast = () => {
    showToast({
      title: "T·∫£i xu·ªëng ho√†n t·∫•t",
      message: "File ƒë√£ ƒë∆∞·ª£c t·∫£i xu·ªëng th√†nh c√¥ng.",
      variant: "success",
      icon: <span className="text-2xl">üì•</span>,
    });
  };

  const showLongDurationToast = () => {
    showToast({
      title: "Toast l√¢u",
      message: "Toast n√†y s·∫Ω hi·ªÉn th·ªã trong 10 gi√¢y.",
      variant: "info",
      duration: 10000,
    });
  };

  const showNoAutoCloseToast = () => {
    showToast({
      title: "Kh√¥ng t·ª± ƒë√≥ng",
      message: "Toast n√†y s·∫Ω kh√¥ng t·ª± ƒë√≥ng, b·∫°n ph·∫£i ƒë√≥ng th·ªß c√¥ng.",
      variant: "warning",
      duration: 0,
    });
  };

  const showSmallToast = () => {
    showToast({
      title: "Toast nh·ªè",
      message: "Toast v·ªõi k√≠ch th∆∞·ªõc nh·ªè.",
      variant: "default",
      size: "small",
    });
  };

  const showLargeToast = () => {
    showToast({
      title: "Toast l·ªõn",
      message: "Toast v·ªõi k√≠ch th∆∞·ªõc l·ªõn v√† nhi·ªÅu n·ªôi dung h∆°n.",
      variant: "default",
      size: "large",
    });
  };

  const showMultipleToasts = () => {
    showToast({
      title: "Toast 1",
      message: "Toast ƒë·∫ßu ti√™n",
      variant: "success",
    });

    setTimeout(() => {
      showToast({
        title: "Toast 2",
        message: "Toast th·ª© hai",
        variant: "info",
      });
    }, 500);

    setTimeout(() => {
      showToast({
        title: "Toast 3",
        message: "Toast th·ª© ba",
        variant: "warning",
      });
    }, 1000);

    setTimeout(() => {
      showToast({
        title: "Toast 4",
        message: "Toast th·ª© t∆∞",
        variant: "error",
      });
    }, 1500);
  };

  return (
    <div className="w-full bg-white p-8 rounded-lg shadow-lg">
      <h2 className="text-2xl font-bold text-gray-900 mb-6 text-center">Toast Components Demo</h2>

      <div className="space-y-8">
        {/* Toast Variants */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4">Toast Variants</h3>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3">
            <button
              onClick={showBasicToast}
              className="px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors"
            >
              Default
            </button>
            <button
              onClick={showSuccessToast}
              className="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition-colors"
            >
              Success
            </button>
            <button
              onClick={showWarningToast}
              className="px-4 py-2 bg-yellow-500 text-white rounded-md hover:bg-yellow-600 transition-colors"
            >
              Warning
            </button>
            <button
              onClick={showErrorToast}
              className="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors"
            >
              Error
            </button>
            <button
              onClick={showInfoToast}
              className="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"
            >
              Info
            </button>
          </div>
        </div>

        {/* Toast Features */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4">Toast Features</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
            <button
              onClick={showCustomIconToast}
              className="px-4 py-2 bg-purple-500 text-white rounded-md hover:bg-purple-600 transition-colors"
            >
              Custom Icon
            </button>
            <button
              onClick={showLongDurationToast}
              className="px-4 py-2 bg-indigo-500 text-white rounded-md hover:bg-indigo-600 transition-colors"
            >
              Long Duration (10s)
            </button>
            <button
              onClick={showNoAutoCloseToast}
              className="px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 transition-colors"
            >
              No Auto Close
            </button>
            <button
              onClick={showSmallToast}
              className="px-4 py-2 bg-teal-500 text-white rounded-md hover:bg-teal-600 transition-colors"
            >
              Small Size
            </button>
            <button
              onClick={showLargeToast}
              className="px-4 py-2 bg-pink-500 text-white rounded-md hover:bg-pink-600 transition-colors"
            >
              Large Size
            </button>
            <button
              onClick={showMultipleToasts}
              className="px-4 py-2 bg-cyan-500 text-white rounded-md hover:bg-cyan-600 transition-colors"
            >
              Multiple Toasts
            </button>
          </div>
        </div>

        {/* Toast Position */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4">Toast Position</h3>
          <div className="space-y-4">
            <div className="flex flex-wrap gap-2">
              {[
                "top-left",
                "top-center",
                "top-right",
                "bottom-left",
                "bottom-center",
                "bottom-right"
              ].map((pos) => (
                <button
                  key={pos}
                  onClick={() => setPosition(pos as any)}
                  className={cn(
                    "px-3 py-1 rounded text-sm transition-colors",
                    position === pos
                      ? "bg-blue-500 text-white"
                      : "bg-gray-200 text-gray-700 hover:bg-gray-300"
                  )}
                >
                  {pos.replace("-", " ")}
                </button>
              ))}
            </div>
            <p className="text-sm text-gray-600">
              V·ªã tr√≠ hi·ªán t·∫°i: <strong>{position.replace("-", " ")}</strong>
            </p>
          </div>
        </div>

        {/* Toast Management */}
        <div>
          <h3 className="text-lg font-semibold text-gray-800 mb-4">Toast Management</h3>
          <div className="flex gap-3">
            <button
              onClick={closeAllToasts}
              className="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors"
            >
              ƒê√≥ng t·∫•t c·∫£ Toasts
            </button>
          </div>
        </div>

        {/* Information */}
        <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <h4 className="font-semibold text-blue-800 mb-2">Th√¥ng tin v·ªÅ Toast</h4>
          <ul className="text-sm text-blue-700 space-y-1">
            <li>‚Ä¢ Toast s·∫Ω t·ª± ƒë·ªông ƒë√≥ng sau 5 gi√¢y (m·∫∑c ƒë·ªãnh)</li>
            <li>‚Ä¢ B·∫°n c√≥ th·ªÉ ƒë√≥ng toast b·∫±ng n√∫t X</li>
            <li>‚Ä¢ Toast c√≥ thanh progress bar hi·ªÉn th·ªã th·ªùi gian c√≤n l·∫°i</li>
            <li>‚Ä¢ T·ªëi ƒëa 5 toast c√πng l√∫c (c√≥ th·ªÉ thay ƒë·ªïi)</li>
            <li>‚Ä¢ H·ªó tr·ª£ 6 v·ªã tr√≠ kh√°c nhau tr√™n m√†n h√¨nh</li>
            <li>‚Ä¢ C√≥ th·ªÉ t√πy ch·ªânh icon, k√≠ch th∆∞·ªõc v√† th·ªùi gian hi·ªÉn th·ªã</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

const cn = (...classes: (string | undefined)[]) => {
  return classes.filter(Boolean).join(" ");
};

export default ToastDemo;
